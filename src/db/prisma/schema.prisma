generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Pricing {
  quantity Int
  price    Float
}

model Product {
  id           String      @id @map("_id") @default(auto()) @db.ObjectId
  name         String      @unique
  image_uris   String[]
  unit         String
  descriptions String[]
  pricing      Pricing[]
  brand        String
  catalogProducts CatalogProduct[]
  groupProducts   GroupProduct[]
}

model Catalog {
  id        String         @id @map("_id") @default(auto()) @db.ObjectId
  name      String         @unique
  image_uri String
  catalogProducts CatalogProduct[]
}

model Group {
  id       String         @id @map("_id") @default(auto()) @db.ObjectId
  name     String         @unique
  groupProducts   GroupProduct[]
}

// Join table for many-to-many relationship between Product and Catalog
model CatalogProduct {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  catalog   Catalog  @relation(fields: [catalogId], references: [id])
  catalogId String   @map("catalogId") @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @map("productId") @db.ObjectId
}

// Join table for many-to-many relationship between Product and Group
model GroupProduct {
  id      String   @id @map("_id") @default(auto()) @db.ObjectId
  group   Group    @relation(fields: [groupId], references: [id])
  groupId String   @map("groupId") @db.ObjectId
  product Product  @relation(fields: [productId], references: [id])
  productId String   @map("productId") @db.ObjectId
}
